Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Customer IDV,Chrome 127.0.0.0,,,16-08-2024 16:50:26,16-08-2024 16:52:45,2m - 18.933s,FAILED
,,,,,,,
Test Cases/TC02_Customer_Idv,Chrome 127.0.0.0,Scenario 2 : Take NRIC from customer idv table that has done fully ekyc,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.544s,FAILED
"println(""**************MEMBER ONBOARDINGG STARTED**************"")",Chrome 127.0.0.0,Member Onboarding Status,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
statreq_id = Math.floor(Math.random() * 9000000000) + 1000000000,Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
custloan_id = Math.floor(Math.random() * 9000000000) + 1000000000,Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
println(custloan_id),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
"response4 = sendRequest(findTestObject(""EKYC Flow/Member Onboarding Status"", [""stat_req_id"":statreq_id, ""NRIC"":IDV_Nric]))",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.166s,PASSED
println(response4.getResponseBodyContent()),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
getStatusCode()).isEqualTo(200),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.001s,PASSED
"println(verifyElementPropertyValue(response4, ""exists"", ""true""))",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.048s,PASSED
"println(""**************MEMBER ONBOARDINGG PASSED**************"")",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
"println(""**************MEMBER EXISTENCE STARTED**************"")",Chrome 127.0.0.0,Member Existence Check,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
exreq_id = Math.floor(Math.random() * 9000000000) + 1000000000,Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
println(custloan_id),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
"response5 = sendRequest(findTestObject(""EKYC Flow/Member Existence Check"", [""ex_loan_id"":custloan_id, ""ex_req_id"":exreq_id, ""NRIC"":IDV_Nric]))",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.149s,PASSED
println(response5.getResponseBodyContent()),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
getStatusCode()).isEqualTo(200),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
"println(verifyElementPropertyValue(response5, ""exists"", ""true""))",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.041s,PASSED
"println(""**************MEMBER EXISTENCE PASSED**************"")",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
"println(""**************CUSTOMER RISK RATING STARTED**************"")",Chrome 127.0.0.0,Customer Risk Rating,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
custreq_id = Math.floor(Math.random() * 9000000000) + 1000000000,Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.001s,PASSED
println(custloan_id),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
"response1 = sendRequest(findTestObject(""EKYC Flow/Customer Risk Rating"", [""cust_req_id"":custreq_id, ""cust_loan_id"":custloan_id, ""NRIC"":IDV_Nric]))",Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.103s,PASSED
println(response1.getResponseBodyContent()),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.000s,PASSED
getStatusCode()).isEqualTo(200),Chrome 127.0.0.0,,,16-08-2024 16:52:45,16-08-2024 16:52:45,0.002s,FAILED
